#!/usr/bin/perl -w

#
## Copyright (C) 2009 Gleb Voronich <http://stanly.net.ua/>
##
## This program is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License
## as published by the Free Software Foundation; version 2 dated June,
## 1991.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
##
##
## $Log$
##
## Based on Redis module code v0.08 2009/from http://svn.rot13.org/index.cgi/Redis
##

use strict;
use IO::Socket::INET;
use Switch;

my $HOST = exists $ENV{'host'} ? $ENV{'host'} : "127.0.0.1";
my $PORT = exists $ENV{'port'} ? $ENV{'port'} : 6379;

my $server = "$HOST:$PORT";
my $sock = IO::Socket::INET->new(
	PeerAddr => $server,
	Proto => 'tcp'
);

print $sock "INFO\r\n";
my $result = <$sock> || die "can't read socket: $!";

my $rep;
read($sock, $rep, substr($result,1)) || die "can't read from socket: $!";

my $hash;
foreach (split(/\r\n/, $rep)) {
  my ($key,$val) = split(/:/, $_, 2);
  $hash->{$key} = $val;
}
close ($sock);


$0 =~ s/(.+)redis_//g;

switch ($0) {
    case "connected_clients" {
	if ( defined $ARGV[0] and $ARGV[0] eq "config" ) {
            print "graph_title Connected clients\n";
            print "graph_vlabel Connected clients\n";
            print "connected_clients.label connected clients\n";
            print "graph_category redis\n";
            exit 0;
	}
	print "connected_clients.value " . $hash->{'connected_clients'} . "\n";
    }


    case "per_sec" {
	if ( defined $ARGV[0] and $ARGV[0] eq "config" ) {
            print "graph_title Per second\n";
            print "graph_vlabel per \${graph_period}\n";
            print "graph_category redis\n";
            print "requests.label requests\n";
            print "requests.type COUNTER\n";
            print "connections.label connections\n";
            print "connections.type COUNTER\n";
            exit 0;
	}
	print "requests.value ". $hash->{'total_commands_processed'} ."\n";
	print "connections.value ". $hash->{'total_connections_received'} ."\n";
    }


    case "used_memory" {
	if ( defined $ARGV[0] and $ARGV[0] eq "config" ) {
            print "graph_title Used memory\n";
            print "graph_vlabel Used memory\n";
            print "used_memory.label used memory\n";
            print "graph_category redis\n";
            exit 0;
	}
	print "used_memory.value ". $hash->{'used_memory'}  ."\n";
    }
}

